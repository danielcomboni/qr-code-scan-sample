[{"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\index.js":"1","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\App.js":"2","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\reportWebVitals.js":"3","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\Buttons\\Buttons.js":"4","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\HandleScanQRCode.ts":"5","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\ScanQRCode.tsx":"6"},{"size":509,"mtime":1611690026857,"results":"7","hashOfConfig":"8"},{"size":220,"mtime":1611671352415,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":225,"mtime":1611663781160,"results":"11","hashOfConfig":"8"},{"size":6242,"mtime":1611688597403,"results":"12","hashOfConfig":"8"},{"size":6328,"mtime":1611688216952,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"v8s7m",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\index.js",[],["31","32"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\App.js",["33"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ScanQRCode from \"./components/scan/ScanQRCode\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScanQRCode />\n    </div>\n  );\n}\n\nexport default App;\n","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\reportWebVitals.js",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\Buttons\\Buttons.js",[],["34","35"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\HandleScanQRCode.ts",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\ScanQRCode.tsx",["36","37","38","39"],"import React, { Component } from \"react\";\r\nimport { ButtonTypeButton, justConsoleIt } from \"../Buttons/Buttons\";\r\nimport * as ZXing from \"@zxing/library\";\r\n// import { BrowserMultiFormatReader } from \"@zxing/library/esm/browser\";\r\nimport HandleScanQRCode from \"./HandleScanQRCode\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import 'bootstrap/dist/css/bootstrap.css'; // commented out but has no issues\r\n// Put any other imports below so that CSS from your\r\n// components takes precedence over default styles.\r\n\r\nconst Buttons = (props: any) => {\r\n  return (\r\n    <div\r\n      className=\"btn-group\"\r\n      role=\"group\"\r\n      aria-label=\"\"\r\n      style={{ paddingTop: \"10px\" }}\r\n    >\r\n      <button type=\"button\" className=\"btn btn-secondary\" id=\"startButton\">\r\n        Scan\r\n      </button>\r\n\r\n      {/* <ButtonTypeButton\r\n        className={\"btn btn-secondary\"}\r\n        name={\"Reset\"}\r\n        id={\"resetButton\"}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CameraSelectionPanel = (/*props: Array<string> */) => {\r\n  return (\r\n    <div className=\"input-group mb-3\" id=\"sourceSelectPanel\">\r\n      <div className=\"input-group-prepend\">\r\n        <label className=\"input-group-text\">Options</label>\r\n      </div>\r\n      <select className=\"custom-select\" id=\"sourceSelect\"></select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VideoCardPanel = () => {\r\n  return (\r\n    <div className=\"card\" hidden={true} id=\"video-card-id\">\r\n      <h5 className=\"card-header\">Focus camera on barcode(qr code)</h5>\r\n      <div className=\"card-body\">\r\n        <div>\r\n          <video\r\n            id=\"video\"\r\n            width=\"100%\"\r\n            style={{ border: \"0px solid gray\" }}\r\n          ></video>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VideoScanResult = () => {\r\n  return (\r\n    <div className=\"card\" hidden={true} id=\"result-card-id\">\r\n      <h5 className=\"card-header\">decoded result</h5>\r\n      <div className=\"card-body\">\r\n        {/* <h5 className=\"card-title\">Count</h5> */}\r\n        <p className=\"card-text\" id=\"result\"></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const performScan = () => {\r\n//   let selectedDeviceId: any;\r\n//   const codeReader = new BrowserMultiFormatReader();\r\n//   console.log(\"ZXing code reader initialized\");\r\n//   codeReader\r\n//     .listVideoInputDevices()\r\n//     .then((videoInputDevices) => {\r\n//       const sourceSelect = document.getElementById(\"sourceSelect\")! as HTMLSelectElement;\r\n//       selectedDeviceId = videoInputDevices[0].deviceId;\r\n//       if (videoInputDevices.length >= 1) {\r\n//         videoInputDevices.forEach((element) => {\r\n//           const sourceOption = document.createElement(\"option\");\r\n//           sourceOption.text = element.label;\r\n//           sourceOption.value = element.deviceId;\r\n//           sourceSelect.appendChild(sourceOption);\r\n//         });\r\n\r\n//         sourceSelect.onchange = () => {\r\n//           selectedDeviceId = sourceSelect.value;\r\n//         };\r\n\r\n//         // const sourceSelectPanel = document.getElementById('sourceSelectPanel')\r\n//         // sourceSelectPanel.style.display = 'block'\r\n//       }\r\n\r\n//       document.getElementById(\"startButton\")!.addEventListener(\"click\", () => {\r\n//         // const screenWidth = screen.width;\r\n//         // const screenHeight = screen.height;\r\n\r\n//         // // add device detection\r\n//         // if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n//         //     document.getElementById('video').width = screenWidth - 1000\r\n//         //     document.getElementById('video').height = screenHeight - 20\r\n//         // } else {\r\n//         //     document.getElementById('video').width = screenWidth\r\n//         //     // document.getElementById('video').height = screenHeight - 20\r\n//         // }\r\n\r\n//         document.getElementById(\"video-card-id\")!.hidden = false;\r\n//         document.getElementById(\"result-card-id\")!.hidden = true;\r\n\r\n//         codeReader.decodeFromVideoDevice(\r\n//           selectedDeviceId,\r\n//           \"video\",\r\n//           (result, err) => {\r\n//             if (result) {\r\n//               console.log(result);\r\n\r\n//               document.getElementById(\"video-card-id\")!.hidden = true;\r\n//               document.getElementById(\"result-card-id\")!.hidden = false;\r\n//               document.getElementById(\"result\")!.textContent = result.getText();\r\n//               console.log(\"the result:\", result.getText());\r\n//               codeReader.reset();\r\n//             }\r\n//             if (err && !(err instanceof ZXing.NotFoundException)) {\r\n//               // console.error(err);\r\n//               // document.getElementById(\"result\").textContent = err;\r\n//             }\r\n//           }\r\n//         );\r\n//         console.log(\r\n//           `Started continous decode from camera with id ${selectedDeviceId}`\r\n//         );\r\n//       });\r\n\r\n//       document.getElementById(\"resetButton\")!.addEventListener(\"click\", () => {\r\n//         codeReader.reset();\r\n//         document.getElementById(\"result\")!.textContent = \"\";\r\n//         document.getElementById(\"result-card-id\")!.hidden = true;\r\n//         console.log(\"Reset.\");\r\n//       });\r\n//     })\r\n//     .catch((err) => {\r\n//       console.error(err);\r\n//     });\r\n// };\r\n\r\nclass ScanQRCode extends Component {\r\n  state = {\r\n    qrCodeResult: \"\",\r\n    allCameras: []\r\n  };\r\n\r\n  startScan = () => HandleScanQRCode.startScan();\r\n\r\n  resetCamera = () => HandleScanQRCode.resetCamera();\r\n\r\n  getAllCameras = () => HandleScanQRCode.displayCamerasNames();\r\n\r\n\r\n\r\n  render() {\r\n    // performScan();\r\n    this.getAllCameras();\r\n    return (\r\n      <div className=\"container\">\r\n        <button type=\"button\" className=\"btn btn-secondary\" id=\"startButton\" onClick={this.startScan}>\r\n          Scan\r\n      </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          id=\"resetButton\"\r\n          onClick={this.resetCamera}\r\n        >\r\n          Reset\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={this.getAllCameras}\r\n        >\r\n          all cameras\r\n        </button>\r\n\r\n        <CameraSelectionPanel />\r\n        <VideoCardPanel />\r\n        <VideoScanResult />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScanQRCode;\r\n",["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":26},{"ruleId":"52","severity":1,"message":"54","line":2,"column":28,"nodeType":"48","messageId":"49","endLine":2,"endColumn":41},{"ruleId":"52","severity":1,"message":"55","line":3,"column":13,"nodeType":"48","messageId":"49","endLine":3,"endColumn":18},{"ruleId":"52","severity":1,"message":"56","line":11,"column":7,"nodeType":"48","messageId":"49","endLine":11,"endColumn":14},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["57"],["58"],"@typescript-eslint/no-unused-vars","'ButtonTypeButton' is defined but never used.","'justConsoleIt' is defined but never used.","'ZXing' is defined but never used.","'Buttons' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]