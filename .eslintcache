[{"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\index.js":"1","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\App.js":"2","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\reportWebVitals.js":"3","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\Buttons\\Buttons.js":"4","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\HandleScanQRCode.ts":"5","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\ScanQRCode.tsx":"6","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\constants\\Constants.ts":"7","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\main\\Main.tsx":"8","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\main\\MainBody.tsx":"9","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\header\\Header.tsx":"10","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\sidebar\\Sidebar.tsx":"11","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\accordion\\Accordion.tsx":"12","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\TableTest.tsx":"13","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\constants\\Workflow.ts":"14","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\Table.tsx":"15","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\Utils\\collections\\Map.ts":"16","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\Utils\\collections\\List.ts":"17","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\TableBody.tsx":"18","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\TableHeader.tsx":"19","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\store\\store.ts":"20","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\router\\index.tsx":"21","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\home\\HomePage.tsx":"22","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\home\\TestPage.tsx":"23","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\Utils\\Dom.ts":"24","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\gotchas\\ErrorBoundary.tsx":"25","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\transfers\\TransferForm.tsx":"26","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\HandleQRCodeWriting.ts":"27","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\subcomponents\\DatePicker.tsx":"28","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\subcomponents\\Checkbox.tsx":"29"},{"size":705,"mtime":1613918220028,"results":"30","hashOfConfig":"31"},{"size":194,"mtime":1613918200682,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":225,"mtime":1611663781160,"results":"34","hashOfConfig":"31"},{"size":2974,"mtime":1615379190966,"results":"35","hashOfConfig":"31"},{"size":6255,"mtime":1615782542443,"results":"36","hashOfConfig":"31"},{"size":31,"mtime":1611997269676,"results":"37","hashOfConfig":"31"},{"size":418,"mtime":1613917900580,"results":"38","hashOfConfig":"31"},{"size":393,"mtime":1613918182514,"results":"39","hashOfConfig":"31"},{"size":2894,"mtime":1613916380135,"results":"40","hashOfConfig":"31"},{"size":1759,"mtime":1613919798886,"results":"41","hashOfConfig":"31"},{"size":10269,"mtime":1613570281478,"results":"42","hashOfConfig":"31"},{"size":6964,"mtime":1613767011284,"results":"43","hashOfConfig":"31"},{"size":1302,"mtime":1613845773475,"results":"44","hashOfConfig":"31"},{"size":985,"mtime":1613845195251,"results":"45","hashOfConfig":"31"},{"size":1967,"mtime":1613231630389,"results":"46","hashOfConfig":"31"},{"size":1252,"mtime":1613231630381,"results":"47","hashOfConfig":"31"},{"size":1025,"mtime":1613918130575,"results":"48","hashOfConfig":"31"},{"size":428,"mtime":1613846340465,"results":"49","hashOfConfig":"31"},{"size":719,"mtime":1613469469727,"results":"50","hashOfConfig":"31"},{"size":1025,"mtime":1613920224776,"results":"51","hashOfConfig":"31"},{"size":659,"mtime":1613918580158,"results":"52","hashOfConfig":"31"},{"size":448,"mtime":1613564632934,"results":"53","hashOfConfig":"31"},{"size":132,"mtime":1611673410808,"results":"54","hashOfConfig":"31"},{"size":766,"mtime":1613817923521,"results":"55","hashOfConfig":"31"},{"size":7028,"mtime":1614240347699,"results":"56","hashOfConfig":"31"},{"size":508,"mtime":1613936697462,"results":"57","hashOfConfig":"31"},{"size":637,"mtime":1613974176770,"results":"58","hashOfConfig":"31"},{"size":616,"mtime":1613970292354,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"v8s7m",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"79"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\index.js",[],["127","128"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\App.js",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\reportWebVitals.js",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\Buttons\\Buttons.js",[],["129","130"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\HandleScanQRCode.ts",["131","132","133"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\ScanQRCode.tsx",["134"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\constants\\Constants.ts",[],["135","136"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\main\\Main.tsx",[],["137","138"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\main\\MainBody.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\header\\Header.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\sidebar\\Sidebar.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\accordion\\Accordion.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\TableTest.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\constants\\Workflow.ts",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\Table.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\Utils\\collections\\Map.ts",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\Utils\\collections\\List.ts",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\TableBody.tsx",["139"],"\r\nimport { Component } from 'react';\r\n\r\nimport IKeyValueMap from '../../Utils/collections/Map';\r\nimport { ITDAttributes } from './TableData';\r\n\r\nexport interface ITableBodyProps<K, V> {\r\n  items: IKeyValueMap<K, V>;\r\n  tdAttributes: ITDAttributes;\r\n  dataDisplayFunction: (key: string, data: any) => any\r\n}\r\n\r\nclass TableBody<K, V> extends Component<ITableBodyProps<K, V>, {}> {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <tbody>\r\n        {\r\n\r\n          this.props.items.getValues().toArray().map((v, index) => {\r\n\r\n            return (<tr key={index}>\r\n              {\r\n                Object.entries(v).map(([key, value], i) => {\r\n                  if (i > 0) {\r\n                    const tdValue = this.props.dataDisplayFunction(key, value);\r\n                    return <td key={i} className={this.props.tdAttributes.className.get(key)} >{tdValue}</td>\r\n                  }\r\n                })\r\n              }\r\n            </tr>)\r\n\r\n          })\r\n\r\n        }\r\n\r\n      </tbody>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\table\\TableHeader.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\store\\store.ts",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\router\\index.tsx",["140"],"\r\nimport {\r\n  BrowserRouter as Router, Switch, Route, Link\r\n} from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport HomePage from \"../components/home/HomePage\";\r\nimport ScanQRCode from \"../components/scan/ScanQRCode\";\r\nimport TransferForm from \"../components/transfers/TransferForm\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n// Instead of BrowserRouter, we use the regular router,\r\n// but we pass in a customer history to it.\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n\r\n          <Route path=\"/transfer-form\">\r\n            <TransferForm />\r\n          </Route>\r\n\r\n          <Route path=\"/scan\">\r\n            <ScanQRCode />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </div>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default AppRouter;\r\n","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\home\\HomePage.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\home\\TestPage.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\Utils\\Dom.ts",[],["141","142"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\gotchas\\ErrorBoundary.tsx",[],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\transfers\\TransferForm.tsx",["143","144","145","146"],"import React, { ChangeEvent, Component } from 'react';\r\nimport { jsPDF } from \"jspdf\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Main from '../main/Main';\r\nimport Header from '../header/Header';\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport MainBody from '../main/MainBody';\r\n\r\nimport logo from '../../assets/dfcu_logo.png'\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Datepicker from '../subcomponents/DatePicker';\r\n\r\n// import * as ZXing from \"@zxing/library\";\r\nimport * as pdfMake from \"pdfmake/build/pdfmake\";\r\nimport * as pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n(pdfMake as any).vfs = pdfFonts.pdfMake.vfs\r\n\r\ninterface ITransferhtmlFormState {\r\n  date: Date;\r\n  branchName: string;\r\n  htmlForeignRemittances: boolean;\r\n  eft: boolean;\r\n  rtgs: boolean;\r\n  rtgsLocal: boolean;\r\n  eaps: boolean;\r\n  repss: boolean;\r\n  htmlForeignDraft: boolean\r\n\r\n  currency: string;\r\n  amount: string;\r\n  rate: string;\r\n\r\n  qrCodeResult: string;\r\n}\r\n\r\nclass TransferhtmlForm extends Component<{}, ITransferhtmlFormState> {\r\n\r\n  state: ITransferhtmlFormState = {\r\n    date: new Date(),\r\n    branchName: '',\r\n    htmlForeignRemittances: false,\r\n    eft: false,\r\n    rtgs: false,\r\n    rtgsLocal: false,\r\n    eaps: false,\r\n    repss: false,\r\n    htmlForeignDraft: false,\r\n\r\n    currency: '',\r\n    amount: '',\r\n    rate: '',\r\n    qrCodeResult: ''\r\n  }\r\n\r\n  asHTMLInputElement = (id: string): HTMLInputElement => (document.getElementById(id) as HTMLInputElement)!\r\n\r\n  handleDate = (date: any): Date => {\r\n    this.setState({ date: new Date(date) })\r\n    console.log(this.state.date)\r\n    return this.state.date\r\n  }\r\n\r\n  handleBranchName = (e: ChangeEvent<HTMLInputElement>): string => {\r\n    this.setState({ branchName: e.target.value })\r\n    console.log('branch name: ', this.state.branchName);\r\n    return this.state.branchName;\r\n  }\r\n\r\n  providePDFValues = (): string => {\r\n    let result = '';\r\n    Object.entries(this.state).map(([key, value], i) => {\r\n      result = result.concat(value).concat(\";\");\r\n      this.setState({ qrCodeResult: result })\r\n    });\r\n    return this.state.qrCodeResult;\r\n  }\r\n\r\n  pdfMakeSample(): void {\r\n    const docDefinition = {\r\n      content: [{\r\n\r\n        table: {\r\n          headerRows: 1,\r\n          widths: ['*', 'auto', 100, '*'],\r\n          body: [\r\n            ['First', 'Second', 'Third', 'Последняя'],\r\n            ['Value 1', 'Value 2', 'Value 3', 'Value 4'],\r\n            [{ text: 'Bold value', bold: true }, 'Val 2', 'Val 3', 'Чё']\r\n          ]\r\n        }\r\n      }]\r\n    };\r\n    pdfMake.createPdf(docDefinition).download('pdfmake.pdf');\r\n\r\n    const pdfDoc = pdfMake.createPdf(docDefinition);\r\n    pdfDoc.download(\"testdoc.pdf\");\r\n  }\r\n\r\n  pdfMakeStylingSample = (): void => {\r\n\r\n    console.log('tetetetete:', this.state.qrCodeResult)\r\n    const documentDefinition = {\r\n\r\n      content: [//start content\r\n\r\n        // 'this is a standard paragraph, using default style',\r\n\r\n        { text: this.state.branchName, fontSize: 15 },\r\n\r\n        {\r\n          text: [\r\n\r\n            { text: this.state.qrCodeResult, fontSize: 15 },\r\n\r\n          ]\r\n        },\r\n\r\n        {\r\n          qr: `${this.state.branchName};${this.state.date}`,\r\n          fit: 250\r\n        }\r\n\r\n      ]// end content\r\n    };\r\n    pdfMake.createPdf(documentDefinition).download(\"styling_test.pdf\")\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <Main>\r\n\r\n        <Header />\r\n\r\n        <Sidebar />\r\n\r\n        <MainBody>\r\n\r\n          <h2 style={{ textAlign: 'center' }}>FUNDS TRANSFER REQUEST</h2>\r\n          <img src={logo} />\r\n\r\n          <h6>*PLEASE FILL THE htmlForM IN CAPITAL/BLOCK LETTER*</h6>\r\n\r\n          {/* start branch name and date */}\r\n\r\n          {/* <Checkbox label=\"htmlForeign Remittances\" flag={this.state.htmlForeignRemittances} /> */}\r\n\r\n          {/* <Checkbox label=\"EFT\" flag={this.state.htmlForeignRemittances} /> */}\r\n\r\n          {/* <Checkbox label=\"RTGS\" flag={this.state.htmlForeignRemittances} />\r\n\r\n            <Checkbox label=\"RTGS (Local)\" flag={this.state.htmlForeignRemittances} />\r\n\r\n            <Checkbox label=\"EAPS\" flag={this.state.htmlForeignRemittances} />\r\n\r\n            <Checkbox label=\"REPSS\" flag={this.state.htmlForeignRemittances} />\r\n\r\n            <Checkbox label=\"htmlForeign Draft\" flag={this.state.htmlForeignRemittances} /> */}\r\n\r\n          <form>\r\n            <div className=\"form-row\">\r\n\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"branchName\">Branch Name</label>\r\n                <input value={this.state.branchName} onChange={this.handleBranchName} />\r\n              </div>\r\n\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <DatePicker onChange={this.handleDate} selected={this.state.date} />\r\n              </div>\r\n              {/*      \r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputAddress\">Address</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"inputAddress2\">Address 2</label>\r\n              <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"inputCity\">City</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\r\n              </div>\r\n              <div className=\"form-group col-md-4\">\r\n                <label htmlFor=\"inputState\">State</label>\r\n                <select id=\"inputState\" className=\"form-control\">\r\n                  <option selected>Choose...</option>\r\n                  <option>...</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-2\">\r\n                <label htmlFor=\"inputZip\">Zip</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\r\n                <label className=\"form-check-label\" htmlFor=\"gridCheck\">\r\n                  Check me out\r\n      </label>\r\n              </div>\r\n               */}\r\n            </div>\r\n            {/* <button type=\"submit\" className=\"btn btn-primary\">Sign in</button> */}\r\n          </form>\r\n\r\n          <div>\r\n            <button className=\"btn btn-primary m-1\" id=\"saveButton\" onClick={this.pdfMakeStylingSample}>Generate PDF</button>\r\n          </div>\r\n\r\n        </MainBody>\r\n\r\n      </Main >\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransferhtmlForm;","E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\scan\\HandleQRCodeWriting.ts",["147"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\subcomponents\\DatePicker.tsx",[],["148","149"],"E:\\projects\\js\\react\\qr-code-scan\\qr-code-scan-sample\\src\\components\\subcomponents\\Checkbox.tsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"152","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":13,"nodeType":"158","messageId":"159","endLine":1,"endColumn":18},{"ruleId":"156","severity":1,"message":"160","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":34},{"ruleId":"156","severity":1,"message":"161","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":11},{"ruleId":"156","severity":1,"message":"162","line":29,"column":9,"nodeType":"158","messageId":"159","endLine":29,"endColumn":16},{"ruleId":"150","replacedBy":"163"},{"ruleId":"152","replacedBy":"164"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"165","severity":1,"message":"166","line":26,"column":57,"nodeType":"167","messageId":"168","endLine":26,"endColumn":59},{"ruleId":"156","severity":1,"message":"169","line":3,"column":43,"nodeType":"158","messageId":"159","endLine":3,"endColumn":47},{"ruleId":"150","replacedBy":"170"},{"ruleId":"152","replacedBy":"171"},{"ruleId":"156","severity":1,"message":"172","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":15},{"ruleId":"156","severity":1,"message":"173","line":12,"column":8,"nodeType":"158","messageId":"159","endLine":12,"endColumn":18},{"ruleId":"165","severity":1,"message":"174","line":77,"column":54,"nodeType":"167","messageId":"175","endLine":77,"endColumn":56},{"ruleId":"176","severity":1,"message":"177","line":147,"column":11,"nodeType":"178","endLine":147,"endColumn":29},{"ruleId":"156","severity":1,"message":"179","line":13,"column":7,"nodeType":"158","messageId":"159","endLine":13,"endColumn":10},{"ruleId":"150","replacedBy":"180"},{"ruleId":"152","replacedBy":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"@typescript-eslint/no-unused-vars","'ZXing' is defined but never used.","Identifier","unusedVar","'BrowserMultiFormatReader' is defined but never used.","'Dom' is defined but never used.","'mystyle' is assigned a value but never used.",["182"],["183"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.",["182"],["183"],"'jsPDF' is defined but never used.","'Datepicker' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'svg' is assigned a value but never used.",["182"],["183"],"no-global-assign","no-unsafe-negation"]