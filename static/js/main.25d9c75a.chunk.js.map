{"version":3,"sources":["components/gotchas/ErrorBoundary.tsx","components/header/Header.tsx","components/main/Main.tsx","components/main/MainBody.tsx","Utils/collections/List.ts","Utils/collections/Map.ts","components/sidebar/Sidebar.tsx","components/table/TableBody.tsx","components/table/TableHeader.tsx","components/table/Table.tsx","constants/Workflow.ts","components/table/TableTest.tsx","components/home/HomePage.tsx","Utils/Dom.ts","components/scan/HandleScanQRCode.ts","components/scan/ScanQRCode.tsx","router/index.tsx","App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","state","hasError","error","errorInfo","console","this","props","children","_","Component","HamburgerButton","icon","faBars","Header","sticky","role","roleName","userName","userNameInitials","displayUserNameAndRole","handleStickyHeader","elementId","document","getElementById","header","offsetTop","window","pageYOffset","setState","classList","add","remove","handleHamburgerButton","element","className","sidebar","handleRoleAndUserNameDisplay","matchMedia","matches","addEventListener","id","onLoad","href","onClick","Main","MainBody","List","items","Array","length","item","push","toArray","indexOf","contains","position","splice","index","array","clear","forEach","e","KeyValueMap","pair","Map","key","value","set","map","v","k","put","delete","get","size","has","oldK","newV","containsKey","from","values","list","arrayToList","keys","newMap","navs","sidebarItems","Sidebar","styleLink","to","style","TableBody","getValues","Object","entries","i","tdValue","dataDisplayFunction","tdAttributes","TableHead","getElementsByTagName","querySelectorAll","columnNames","title","Table","tableId","tableRowsData","WorkflowConstants","statusOrSubStatus","STATUS_OPEN","SUB_STATUS_AWAITING_COMPARISON_APPROVAL","STATUS_ERROR","SUB_STATUS_ERROR","STATUS_CLOSED","SUB_STATUS_CLOSED","STATUS_ALL_OR","testData","referenceNumber","applicationDate","Date","type","status","substatus","sender","recipient","amount","keyData","testData2","keyData2","testData3","keyData3","testData4","keyData4","testData5","keyData5","testData6","keyData6","testData7","keyData7","testData8","keyData8","testData9","keyData9","testData10","keyData10","testData11","keyData11","testData12","keyData12","testData13","keyData13","tdClassNames","tableRowData","data","date","getDate","Number","getMonth","getFullYear","statusClassName","statusColours","concat","TableTest","HomePage","Dom","HandleScanQRCode","codeReader","reset","getElById","textContent","hidden","log","decodeFromVideoDevice","selectedDeviceId","result","err","getText","ZXing","getAllCameras","then","cams","sourceSelect","childNodes","child","deviceId","camValues","label","sourceOption","createElement","text","appendChild","onchange","BrowserMultiFormatReader","listVideoInputDevices","CameraSelectionPanel","VideoCardPanel","width","border","VideoScanResult","ScanQRCode","startScan","resetCamera","displayCamerasNames","AppRouter","createBrowserHistory","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"kWAmCeA,E,4MAvBNC,MAAgB,CACrBC,UAAU,G,gEAQaC,EAAcC,GAErCC,QAAQF,MAAM,qBAAsBA,EAAOC,K,+BAI3C,OAAIE,KAAKL,MAAMC,SACN,4DAGFI,KAAKC,MAAMC,Y,gDAfmBC,GAErC,MAAO,CAAEP,UAAU,O,GARKQ,a,wBCNtBC,EAAkB,kBAAM,cAAC,IAAD,CAAiBC,KAAMC,OAuEtCC,E,4MApEXb,MAAQ,CACJc,OAAQ,GACRC,KAAM,CACFC,SAAU,MACVC,SAAU,gBACVC,iBAAkB,KAClBC,uBAAwB,K,EAGhCC,mBAAqB,WACjB,IAAMC,EAAY,SAClB,GAAIC,SAASC,eAAeF,GAAY,CACpC,IAAMG,EAASF,SAASC,eAAeF,GACnCP,EAASU,EAAOC,UAChBC,OAAOC,YAAcb,GACrB,EAAKc,SAAS,CAAEd,OAAQ,WACxBU,EAAOK,UAAUC,IAAI,EAAK9B,MAAMc,UAEhC,EAAKc,SAAS,CAAEd,OAAQ,KACxBU,EAAOK,UAAUE,OAAO,a,EAapCC,sBAAwB,WAEpB,IAAIC,EAAUX,SAASC,eAAe,UAChB,WAAtBU,EAAQC,UAAyBD,EAAQC,UAAYD,EAAQC,UAAY,cAAgBD,EAAQC,UAAY,SAE7G,IAAIC,EAAUb,SAASC,eAAe,WAChB,YAAtBY,EAAQD,UAA0BC,EAAQD,UAAYC,EAAQD,UAAY,cAAgBC,EAAQD,UAAY,W,EAIlHE,6BAA+B,WAC3B,OAAIV,OAAOW,WAAW,sBAAsBC,SACxC,EAAKV,SAAS,CAAEb,KAAK,2BAAM,EAAKf,MAAMe,MAAlB,IAAwBI,uBAAwB,EAAKnB,MAAMe,KAAKG,iBAAhB,YAAwC,EAAKlB,MAAMe,KAAKC,SAAxD,SAC7D,EAAKhB,MAAMe,KAAKI,yBAEvB,EAAKS,SAAS,CAAEb,KAAK,2BAAM,EAAKf,MAAMe,MAAlB,IAAwBI,uBAAwB,EAAKnB,MAAMe,KAAKE,SAAhB,YAAgC,EAAKjB,MAAMe,KAAKC,SAAhD,SAC7D,EAAKhB,MAAMe,KAAKI,yB,kEAvB3Bd,KAAKe,qBAELf,KAAK+B,+BAELV,OAAOa,iBAAiB,SAAUlC,KAAK+B,gC,+BAyBvC,OAEI,sBAAKF,UAAU,SAASM,GAAG,SAASzB,KAAK,aAAa0B,OAAQpC,KAAKe,mBAAnE,UACI,mBAAGc,UAAU,oBAAoBQ,KAAK,QAAtC,wCACA,mBAAGR,UAAU,WAAWQ,KAAK,QAA7B,SAAuCrC,KAAKL,MAAMe,KAAKI,yBACvD,mBAAGuB,KAAK,KAAKR,UAAU,OAAOM,GAAG,aAAaG,QAAStC,KAAK2B,sBAA5D,SACC,4BAAG,cAAC,EAAD,e,GA7DCvB,aCgBNmC,G,yLAZP,OAEI,qBAAKV,UAAU,eAAf,SAEK7B,KAAKC,MAAMC,e,GAPTE,cCwBJoC,E,uKAbP,OAEI,qBAAKX,UAAU,UAAf,SACK7B,KAAKC,MAAMC,e,GAPLE,a,gBCMFqC,E,WAGnB,aAAe,yBAFPC,WAEM,EACZ1C,KAAK0C,MAAQ,IAAIC,M,mDAIjB,OAAO3C,KAAK0C,MAAME,S,0BAGhBC,GACF7C,KAAK0C,MAAMI,KAAKD,K,gCAIhB,OAA6B,IAAtB7C,KAAK0C,MAAME,S,+BAGXC,GACP,OAAyC,IAAlC7C,KAAK+C,UAAUC,QAAQH,K,6BAGzBA,GACL,GAAI7C,KAAKiD,SAASJ,GAAO,CACvB,IAAMK,EAAmBlD,KAAK0C,MAAMM,QAAQH,GAE5C,OADA7C,KAAK0C,MAAMS,OAAOD,EAAU,IACrB,EAEP,OAAO,I,8BAKTlD,KAAK0C,MAAQ,IAAIC,Q,0BAGfS,GACF,OAAOpD,KAAK0C,MAAMU,K,gCAIlB,OAAO,YAAIpD,KAAK0C,S,kCAGNW,GAA4B,IAAD,OAGrC,OAFArD,KAAKsD,QACLD,EAAME,SAAQ,SAACC,GAAD,OAAO,EAAK/B,IAAI+B,MACvBxD,S,KCrCUyD,E,WAGnB,aAAe,yBAFPC,UAEM,EACZ1D,KAAK0D,KAAO,IAAIC,I,gDAGdC,EAAQC,GACV7D,KAAK0D,KAAKI,IAAIF,EAAKC,K,6BAGdE,GAAuB,IAAD,OAC3BA,EAAIR,SAAQ,SAACS,EAAGC,GACd,EAAKC,IAAID,EAAGD,Q,6BAITC,GACLjE,KAAK0D,KAAKS,OAAOF,K,8BAIjBjE,KAAK0D,KAAKJ,U,0BAGRW,GACF,OAAOjE,KAAK0D,KAAKU,IAAIH,K,6BAIrB,OAAOjE,KAAK0D,KAAKW,O,gCAIjB,OAAuB,IAAhBrE,KAAKqE,S,kCAGFJ,GACV,OAAOjE,KAAK0D,KAAKY,IAAIL,K,8BAGfM,EAASC,GAMf,OALIxE,KAAKyE,YAAYF,KACnBvE,KAAK0B,OAAO6C,GACZvE,KAAKkE,IAAIK,EAAMC,IAGVxE,KAAKoE,IAAIG,K,kCAIhB,IAAMlB,EAAQV,MAAM+B,KAAK1E,KAAK0D,KAAKiB,UAC/BC,EAAO,IAAInC,EAEf,OADAmC,EAAKC,YAAL,YAAqBxB,IACduB,I,gCAIP,IAAMvB,EAAQV,MAAM+B,KAAK1E,KAAK0D,KAAKoB,QAC/BF,EAAO,IAAInC,EAEf,OADAmC,EAAKC,YAAL,YAAqBxB,IACduB,I,wCAIP,IAAIG,EAAS,IAAIpB,IAEjB,OADA3D,KAAK0D,KAAKH,SAAQ,SAACS,EAAGC,GAAJ,OAAUc,KACrBA,I,2CAIP,OAAOpC,MAAM+B,KAAK1E,KAAK0D,MAAM,yCAAmB,CAAEE,IAArB,KAA0BC,MAA1B,a,aC1F7BmB,G,MAAO,IAAIvB,GACfuB,EAAKd,IAAI,eAAgB,gBACzBc,EAAKd,IAAI,OAAQ,gBAEjB,IAAMe,EAA8B,CAChCA,aAAcD,GAkDHE,E,4MA3CXvF,MAAuB,CACnBsF,aAAcA,EAAaA,c,EAG/BtD,sBAAwB,WAEpB,IAAIC,EAAUX,SAASC,eAAe,WAChB,YAAtBU,EAAQC,UAA0BD,EAAQC,UAAYD,EAAQC,UAAY,cAAgBD,EAAQC,UAAY,W,EAIlHsD,UAAY,WACR,MAAM,8G,oGAON,OAEI,qBAAKtD,UAAU,UAAUM,GAAG,UAA5B,SAEI,qBAAKN,UAAU,MAAf,SACI,+BACI,6BACI,cAAC,IAAD,CAAMA,UAAU,OAAOuD,GAAG,IAAIC,MAAO,GAArC,4BAGJ,6BACI,cAAC,IAAD,CAAMxD,UAAU,OAAOuD,GAAG,QAA1B,uC,GAhCNhF,aCsBPkF,G,6KA9BH,IAAD,OAEP,OAEE,gCAGItF,KAAKC,MAAMyC,MAAM6C,YAAYxC,UAAUgB,KAAI,SAACC,EAAGZ,GAE7C,OAAQ,6BAEJoC,OAAOC,QAAQzB,GAAGD,KAAI,WAAe2B,GAAO,IAAD,mBAAnB9B,EAAmB,KAAdC,EAAc,KACzC,GAAI6B,EAAI,EAAG,CACT,IAAMC,EAAU,EAAK1F,MAAM2F,oBAAoBhC,EAAKC,GACpD,OAAO,oBAAYhC,UAAW,EAAK5B,MAAM4F,aAAahE,UAAUuC,IAAIR,GAA7D,SAAqE+B,GAA5DD,QALPtC,Y,GAXChD,cCyCf0F,E,kLApCI7E,SAAS8E,qBAAqB,SAG7B9E,SAAS+E,iBAAiB,6B,+BAqB1C,OACE,gCACE,6BACGhG,KAAKC,MAAMgG,YAAYlC,KAAI,SAACmC,EAAO9C,GAClC,OAAO,mCAAkB8C,IAAT9C,c,GAvCJhD,aC0BT+F,E,uKAXP,OACI,8BACI,wBAAOhE,GAAInC,KAAKC,MAAMmG,QAAtB,UACI,cAAC,EAAD,CAAWH,YAAajG,KAAKC,MAAMgG,YAAYA,cAC/C,cAAC,EAAD,CAAWvD,MAAO1C,KAAKC,MAAMoG,cAAc3D,MAAOmD,aAAc7F,KAAKC,MAAM4F,aAAcD,oBAAqB5F,KAAKC,MAAM2F,+B,GARnHxF,aCjBbkG,G,MAAb,2GAUuBC,GAEnB,OAAIA,IAAsBD,EAAkBE,aAGxCD,IAAsBD,EAAkBG,wCAFnC,UAKLF,IAAsBD,EAAkBI,cAGtCH,IAAsBD,EAAkBK,iBAFrC,SAKLJ,IAAsBD,EAAkBM,eAGxCL,IAAsBD,EAAkBO,kBAFnC,UAKF,OA9BX,MAAaP,EAEJE,YAAsB,OAFlBF,EAGJI,aAAuB,QAHnBJ,EAIJM,cAAwB,SAJpBN,EAKJQ,cAAgBR,EAAkBE,aAAeF,EAAkBM,eAAiBN,EAAkBI,aALlGJ,EAOJG,wCAAkD,6BAP9CH,EAQJK,iBAA2B,QARvBL,EASJO,kBAA4B,SCErC,IAWME,EAAuB,CAC3B5E,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,OACRC,UAAW,6BACXC,OAAQ,iBACRC,UAAW,oBACXC,OAAQ,KAGJC,EAAgB,CACpBtF,GAAI4E,EAAS5E,IAITuF,EAAwB,CAC5BvF,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,QACRC,UAAW,QACXC,OAAQ,eACRC,UAAW,iBACXC,OAAQ,KAGJG,EAAiB,CACrBxF,GAAIuF,EAAUvF,IAGVyF,EAAwB,CAC5BzF,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAEJK,EAAiB,CACrB1F,GAAIyF,EAAUzF,IAGV2F,EAAwB,CAC5B3F,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJO,EAAiB,CACrB5F,GAAI2F,EAAU3F,IAIV6F,EAAwB,CAC5B7F,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJS,EAAiB,CACrB9F,GAAI6F,EAAU7F,IAGV+F,EAAwB,CAC5B/F,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJW,EAAiB,CACrBhG,GAAI+F,EAAU/F,IAGViG,EAAwB,CAC5BjG,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJa,EAAiB,CACrBlG,GAAIiG,EAAUjG,IAGVmG,EAAwB,CAC5BnG,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJe,EAAiB,CACrBpG,GAAImG,EAAUnG,IAGVqG,EAAwB,CAC5BrG,GAAI,EACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJiB,EAAiB,CACrBtG,GAAIqG,EAAUrG,IAGVuG,EAAyB,CAC7BvG,GAAI,GACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJmB,EAAkB,CACtBxG,GAAIuG,EAAWvG,IAGXyG,EAAyB,CAC7BzG,GAAI,GACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJqB,EAAkB,CACtB1G,GAAIyG,EAAWzG,IAGX2G,EAAyB,CAC7B3G,GAAI,GACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJuB,GAAkB,CACtB5G,GAAI2G,EAAW3G,IAGX6G,GAAyB,CAC7B7G,GAAI,GACJ6E,gBAAiB,SACjBC,gBAAiB,IAAIC,KACrBC,KAAM,OACNC,OAAQ,SACRC,UAAW,SACXC,OAAQ,iBACRC,UAAW,gBACXC,OAAQ,KAGJyB,GAAkB,CACtB9G,GAAI6G,GAAW7G,IAGb+G,GAAe,IAAIzF,EACvByF,GAAahF,IAAI,KAAM,IACvBgF,GAAahF,IAAI,kBAAmB,oBACpCgF,GAAahF,IAAI,kBAAmB,oBACpCgF,GAAahF,IAAI,OAAQ,iBACzBgF,GAAahF,IAAI,SAAU,mBAC3BgF,GAAahF,IAAI,YAAa,uBAC9BgF,GAAahF,IAAI,SAAU,mBAC3BgF,GAAahF,IAAI,YAAa,sBAC9BgF,GAAahF,IAAI,SAAU,mBAE3B,IAAM2B,GAA8B,CAClChE,UAAWqH,IAGTC,GAAe,IAAI1F,EACvB0F,GAAajF,IAAIuD,EAASV,GAC1BoC,GAAajF,IAAIyD,EAAUD,GAC3ByB,GAAajF,IAAI2D,EAAUD,GAC3BuB,GAAajF,IAAI6D,EAAUD,GAC3BqB,GAAajF,IAAI+D,EAAUD,GAC3BmB,GAAajF,IAAIiE,EAAUD,GAC3BiB,GAAajF,IAAImE,EAAUD,GAC3Be,GAAajF,IAAIqE,EAAUD,GAC3Ba,GAAajF,IAAIuE,EAAUD,GAC3BW,GAAajF,IAAIyE,EAAWD,GAC5BS,GAAajF,IAAI2E,EAAWD,GAC5BO,GAAajF,IAAI6E,GAAWD,GAC5BK,GAAajF,IAAI+E,GAAWD,IAE5B,IAAMpD,GAAsB,SAAChC,EAAawF,GAExC,GAAY,oBAARxF,EAA2B,CAC7B,IAAMyF,EAAO,IAAInC,KAAKkC,GACtB,OAAOC,EAAKC,UAAY,IAAMC,OAAOF,EAAKG,WAAa,GAAK,IAAMH,EAAKI,cAGzE,GAAY,WAAR7F,EAAkB,CACpB,IAAM8F,EAAkBpD,EAAkBqD,cAAcP,GAExD,OADa,sBAAMvH,UAAW6H,EAAjB,SAAmCN,IAIlD,GAAY,cAARxF,EAAqB,CACvB,IAAM8F,EAAkBpD,EAAkBqD,cAAcP,GAExD,OADa,sBAAMvH,UAAW6H,EAAjB,SAAmCN,IAIlD,MAAO,GAAGQ,OAAOR,IAObnJ,GAAuC,CAAEgG,YAFR,CAAEA,YAlRhB,CACvB,SACA,mBACA,OACA,SACA,YACA,YACA,cACA,WA4QoEG,QAAS,gBAAiBC,cAJ1C,CAAE3D,MAAOyG,GAActD,gBAAcD,oBAAqBA,IAIWC,gBAAcD,wBAW1HiE,G,uKANX,OACE,cAAC,EAAD,CAAO5D,YAAahG,GAAMgG,YAAaG,QAASnG,GAAMmG,QAASC,cAAepG,GAAMoG,cAAeR,aAAc5F,GAAM4F,aAAcD,oBAAqB3F,GAAM2F,0B,GAJ9IxF,aCxPT0J,G,uKAzBX,OACE,eAAC,EAAD,WAEE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,eAAC,EAAD,WAEE,kDAEA,cAAC,EAAD,UAEE,cAAC,GAAD,MAIF,cAAC,GAAD,c,GApBa1J,a,kCCbF2J,G,uGACK5H,GACtB,OAAOlB,SAASC,eAAeiB,O,KCEd6H,G,2GAKjBA,EAAiBC,WAAWC,QAC5BH,GAAII,UAAU,UAAWC,YAAc,GACvCL,GAAII,UAAU,kBAAmBE,QAAS,EAC1CtK,QAAQuK,IAAI,Y,kCAIZP,GAAII,UAAU,iBAAiBE,QAAS,EACxCN,GAAII,UAAU,kBAAkBE,QAAS,EACzCL,EAAiBC,WAAWM,sBAAsBP,EAAiBQ,iBAAkB,SAAS,SAACC,EAAQC,GACjGD,IACF1K,QAAQuK,IAAIG,GACZV,GAAII,UAAU,iBAAkBE,QAAS,EACzCN,GAAII,UAAU,kBAAmBE,QAAS,EAC1CN,GAAII,UAAU,UAAWC,YAAcK,EAAOE,UAC9C5K,QAAQuK,IAAI,cAAeG,EAAOE,WAClCX,EAAiBC,WAAWC,SAE1BQ,GAAwBE,wBAK9B7K,QAAQuK,IAAR,uDAA4DN,EAAiBQ,qB,4CAI7ER,EAAiBa,gBAAgBC,MAAK,SAACC,GACrC,IAAMC,EAAejB,GAAII,UAAU,gBAE/Ba,EAAcC,WAAWrI,OAAS,IACxB,OAAZoI,QAAY,IAAZA,KAAcC,WAAW1H,SAAQ,SAAC2H,GAAD,OAAWA,EAAMxJ,aAGpDsI,EAAiBQ,iBAAmBO,EAAK,GAAGI,SAC5C,IAAIC,EAAY,IAAIzH,IAEhBoH,EAAKnI,QAAU,GACjBmI,EAAKxH,SAAQ,SAAC3B,GACZwJ,EAAUtH,IAAIlC,EAAQuJ,SAAUvJ,EAAQyJ,UAI5CD,EAAU7H,SAAQ,SAACM,EAAOD,GACxB,IAAM0H,EAAerK,SAASsK,cAAc,UAC5CD,EAAaE,KAAO3H,EACpByH,EAAazH,MAAQD,EACT,OAAZoH,QAAY,IAAZA,KAAcS,YAAYH,MAG5BN,EAAcU,SAAW,WACvB1B,EAAiBQ,iBAAjB,OAAoCQ,QAApC,IAAoCA,OAApC,EAAoCA,EAAcnH,Y,sCAQtD,OAFAmG,EAAiBC,WAAa,IAAI0B,4BACf3B,EAAiBC,WAClB2B,4B,KAhED5B,GACLQ,sB,EADKR,GAELC,gB,ECGhB,IAAM4B,GAAuB,WAC3B,OACE,sBAAKhK,UAAU,mBAAmBM,GAAG,oBAArC,UACE,qBAAKN,UAAU,sBAAf,SACE,uBAAOA,UAAU,mBAAjB,8BAEF,wBAAQA,UAAU,gBAAgBM,GAAG,qBAMrC2J,GAAiB,WACrB,OACE,sBAAKjK,UAAU,OAAOwI,QAAQ,EAAMlI,GAAG,gBAAvC,UACE,oBAAIN,UAAU,cAAd,8CACA,qBAAKA,UAAU,YAAf,SACE,8BACE,uBACEM,GAAG,QACH4J,MAAM,OACN1G,MAAO,CAAE2G,OAAQ,4BASvBC,GAAkB,WACtB,OACE,sBAAKpK,UAAU,OAAOwI,QAAQ,EAAMlI,GAAG,iBAAvC,UACE,oBAAIN,UAAU,cAAd,4BACA,qBAAKA,UAAU,YAAf,SAEE,mBAAGA,UAAU,YAAYM,GAAG,iBA2ErB+J,G,4MAlEbC,UAAY,kBAAMnC,GAAiBmC,a,EAEnCC,YAAc,kBAAMpC,GAAiBoC,e,EAErCvB,cAAgB,kBAAMb,GAAiBqC,uB,uDAKrC,OADArM,KAAK6K,gBAGH,eAAC,EAAD,WAEE,cAAC,EAAD,IAEA,cAAC,EAAD,IAEA,cAAC,EAAD,UACE,sBAAKhJ,UAAU,YAAf,UACE,wBAAQsF,KAAK,SAAStF,UAAU,sBAAsBM,GAAG,cAAcG,QAAStC,KAAKmM,UAArF,kBAIA,wBACEhF,KAAK,SACLtF,UAAU,sBACVM,GAAG,cACHG,QAAStC,KAAKoM,YAJhB,mBAiBA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,gB,GA7CahM,aC4BVkM,IApCQC,eAIL,WAChB,OACE,cAAC,IAAD,UACE,8BAcE,eAAC,KAAD,WAEE,cAAC,KAAD,CAAOC,KAAK,QAAZ,SACE,cAAC,GAAD,MAGF,cAAC,KAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,eCvDGC,OARf,WACE,OACE,qBAAK5K,UAAU,MAAf,SACE,cAAC,GAAD,OCCS6K,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCMdO,IAASC,OAGL,cAAC,GAAD,IAGFlM,SAASC,eAAe,SAM1BwL,O","file":"static/js/main.25d9c75a.chunk.js","sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from 'react'\r\n\r\ninterface IProps {\r\n  children: ReactNode\r\n}\r\n\r\ninterface IState {\r\n  hasError: boolean\r\n}\r\n\r\nclass ErrorBoundary extends Component<IProps, IState> {\r\n\r\n  public state: IState = {\r\n    hasError: false\r\n  }\r\n\r\n  public static getDerivedStateFromError(_: Error): IState {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    \r\n    console.error(\"the error message:\", error, errorInfo);\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Sorry.. there was an error</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HamburgerButton = () => <FontAwesomeIcon icon={faBars} />\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        sticky: '',\r\n        role: {\r\n            roleName: 'CSO',\r\n            userName: 'David Pereira',\r\n            userNameInitials: 'DP',\r\n            displayUserNameAndRole: ''\r\n        }\r\n    }\r\n    handleStickyHeader = () => {\r\n        const elementId = \"topnav\";\r\n        if (document.getElementById(elementId)) {\r\n            const header = document.getElementById(elementId)!;\r\n            let sticky = header.offsetTop!;\r\n            if (window.pageYOffset > sticky) {\r\n                this.setState({ sticky: 'sticky' })\r\n                header.classList.add(this.state.sticky);\r\n            } else {\r\n                this.setState({ sticky: '' })\r\n                header.classList.remove(\"sticky\");\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleStickyHeader();\r\n        // this is handled only once...upon mounting\r\n        this.handleRoleAndUserNameDisplay();\r\n        // upon resizing screen\r\n        window.addEventListener('resize', this.handleRoleAndUserNameDisplay)\r\n    }\r\n\r\n    handleHamburgerButton = () => {\r\n\r\n        let element = document.getElementById(\"topnav\")!;\r\n        element.className === \"topnav\" ? element.className = element.className + \" responsive\" : element.className = \"topnav\";\r\n\r\n        let sidebar = document.getElementById(\"sidebar\")!;\r\n        sidebar.className === \"sidebar\" ? sidebar.className = sidebar.className + \" responsive\" : sidebar.className = \"sidebar\";\r\n\r\n    }\r\n\r\n    handleRoleAndUserNameDisplay = (): string => {\r\n        if (window.matchMedia(\"(max-width: 700px)\").matches) {\r\n            this.setState({ role: { ...this.state.role, displayUserNameAndRole: this.state.role.userNameInitials + ` (${this.state.role.roleName})` } })\r\n            return this.state.role.displayUserNameAndRole\r\n        } else {\r\n            this.setState({ role: { ...this.state.role, displayUserNameAndRole: this.state.role.userName + ` (${this.state.role.roleName})` } })\r\n            return this.state.role.displayUserNameAndRole\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"topnav\" id=\"topnav\" role=\"navigation\" onLoad={this.handleStickyHeader}>\r\n                <a className=\"active brand-name\" href=\"#home\">Auto Data Capture solution</a>\r\n                <a className=\"username\" href=\"#user\" >{this.state.role.displayUserNameAndRole}</a>\r\n                <a href=\"#/\" className=\"icon\" id=\"toggle-btn\" onClick={this.handleHamburgerButton}\r\n                ><i><HamburgerButton /></i\r\n                ></a>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\";\r\nimport Header from \"../header/Header\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../header/header.css' // header is placed here because it has access to sidebar\r\nimport './main.css'\r\n\r\nclass Main extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"main-wrapper\">\r\n\r\n                {this.props.children}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main","import React, { Component, Dispatch } from \"react\";\r\nimport Accordion from '../accordion/Accordion'\r\nimport TableTest from \"../table/TableTest\";\r\nimport ScanQRCode from \"../../components/scan/ScanQRCode\";\r\nimport IList from \"../../Utils/collections/List\";\r\nimport { IMainBodyState } from \"../../models/states/IMainBodyState\";\r\nimport { IMainBodyProps } from \"../../models/props/IMainBodyProps\";\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nexport interface ComponentsToDiplay {\r\n    components: IList<Component>\r\n}\r\n\r\nclass MainBody extends Component {\r\n\r\n    render() {\r\n        // const justPrint = this.props.justPrint\r\n        return (\r\n\r\n            <div className=\"content\">\r\n                {this.props.children}\r\n                {/* <Accordion />\r\n                <TableTest /> */}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MainBody","export default interface IList<T> {\r\n  size(): number;\r\n\r\n  add(element: T): void;\r\n\r\n  isEmpty(): boolean;\r\n\r\n  contains(element: T): boolean;\r\n\r\n  remove(item: T): boolean;\r\n\r\n  clear(): void;\r\n\r\n  get(index: number): T;\r\n\r\n  toArray(): Array<T>;\r\n\r\n  arrayToList(array: Array<T>): IList<T>;\r\n}\r\n\r\nexport default class List<T> implements IList<T> {\r\n  private items: Array<T>;\r\n\r\n  constructor() {\r\n    this.items = new Array<T>();\r\n  }\r\n\r\n  size(): number {\r\n    return this.items.length;\r\n  }\r\n\r\n  add(item: T) {\r\n    this.items.push(item);\r\n  }\r\n\r\n  isEmpty(): boolean {\r\n    return this.items.length === 0;\r\n  }\r\n\r\n  contains(item: T): boolean {\r\n    return this.toArray().indexOf(item) !== -1;\r\n  }\r\n\r\n  remove(item: T): boolean {\r\n    if (this.contains(item)) {\r\n      const position: number = this.items.indexOf(item);\r\n      this.items.splice(position, 1);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.items = new Array<T>();\r\n  }\r\n\r\n  get(index: number): T {\r\n    return this.items[index];\r\n  }\r\n\r\n  toArray(): Array<T> {\r\n    return [...this.items];\r\n  }\r\n\r\n  arrayToList(array: Array<T>): IList<T> {\r\n    this.clear();\r\n    array.forEach((e) => this.add(e));\r\n    return this;\r\n  }\r\n}\r\n","import IList from \"./List\";\r\nimport List from \"./List\";\r\n\r\nexport interface IKeyValueMap<K, V> {\r\n  put(key: K, value: V): void;\r\n\r\n  putAll(map: Map<K, V>): void;\r\n\r\n  remove(key: K): void;\r\n\r\n  clear(): void;\r\n\r\n  get(key: K): V | undefined;\r\n\r\n  size(): number;\r\n\r\n  isEmpty(): boolean;\r\n\r\n  containsKey(key: K): boolean;\r\n\r\n  replace(oldKey: K, newValue: V): V | undefined;\r\n\r\n  getValues(): IList<V>;\r\n\r\n  getKeys(): IList<K>;\r\n\r\n  getKeyValuePair(): Map<K, V>;\r\n\r\n  keyValueMapToArray(): any[];\r\n}\r\n\r\nexport default class KeyValueMap<K, V> implements IKeyValueMap<K, V> {\r\n  private pair: Map<K, V>;\r\n\r\n  constructor() {\r\n    this.pair = new Map<K, V>();\r\n  }\r\n\r\n  put(key: K, value: V): void {\r\n    this.pair.set(key, value);\r\n  }\r\n\r\n  putAll(map: Map<K, V>): void {\r\n    map.forEach((v, k) => {\r\n      this.put(k, v);\r\n    });\r\n  }\r\n\r\n  remove(k: K): void {\r\n    this.pair.delete(k);\r\n  }\r\n\r\n  clear(): void {\r\n    this.pair.clear();\r\n  }\r\n\r\n  get(k: K): V | undefined {\r\n    return this.pair.get(k);\r\n  }\r\n\r\n  size(): number {\r\n    return this.pair.size;\r\n  }\r\n\r\n  isEmpty(): boolean {\r\n    return this.size() === 0;\r\n  }\r\n\r\n  containsKey(k: K): boolean {\r\n    return this.pair.has(k);\r\n  }\r\n\r\n  replace(oldK: K, newV: V): V | undefined {\r\n    if (this.containsKey(oldK)) {\r\n      this.remove(oldK);\r\n      this.put(oldK, newV);\r\n    }\r\n\r\n    return this.get(oldK);\r\n  }\r\n\r\n  getValues(): IList<V> {\r\n    const array = Array.from(this.pair.values());\r\n    let list = new List<V>();\r\n    list.arrayToList([...array]);\r\n    return list;\r\n  }\r\n\r\n  getKeys(): IList<K> {\r\n    const array = Array.from(this.pair.keys());\r\n    let list = new List<K>();\r\n    list.arrayToList([...array]);\r\n    return list;\r\n  }\r\n\r\n  getKeyValuePair(): Map<K, V> {\r\n    let newMap = new Map<K, V>();\r\n    this.pair.forEach((v, k) => newMap);\r\n    return newMap;\r\n  }\r\n\r\n  keyValueMapToArray(): any[] {\r\n    return Array.from(this.pair, ([key, value]) => ({ key, value }));\r\n  }\r\n}\r\n","import React, { Component, ReactNode } from 'react'\r\nimport AppRouter from '../../router';\r\nimport KeyValueMap, { IKeyValueMap } from '../../Utils/collections/Map';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './sidebar.css'\r\n\r\nexport interface ISidebarState {\r\n    sidebarItems: IKeyValueMap<string, string>\r\n}\r\n\r\nlet navs = new KeyValueMap<string, string>();\r\nnavs.put('applications', 'Applications');\r\nnavs.put('scan', 'Scan QR code');\r\n\r\nconst sidebarItems: ISidebarState = {\r\n    sidebarItems: navs\r\n}\r\n\r\n\r\n\r\nclass Sidebar extends Component<{}, ISidebarState> {\r\n\r\n    state: ISidebarState = {\r\n        sidebarItems: sidebarItems.sidebarItems\r\n    }\r\n\r\n    handleHamburgerButton = () => {\r\n\r\n        let element = document.getElementById(\"sidebar\")!;\r\n        element.className === \"sidebar\" ? element.className = element.className + \" responsive\" : element.className = \"sidebar\";\r\n\r\n    }\r\n\r\n    styleLink = (): string => {\r\n        return `textDecoration: 'none', display: 'block', color: 'whitesmoke', padding: '16px', overflowWrap: 'break-word'`\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"sidebar\" id=\"sidebar\">\r\n\r\n                <nav className=\"nav\">\r\n                    <ul>\r\n                        <li>\r\n                            <Link className=\"link\" to=\"/\" style={{  }} >Applications</Link>\r\n                        </li>\r\n                        \r\n                        <li>\r\n                            <Link className=\"link\" to=\"/scan\">Scan QR code</Link>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","\r\nimport { Component } from 'react';\r\n\r\nimport IKeyValueMap from '../../Utils/collections/Map';\r\nimport { ITDAttributes } from './TableData';\r\n\r\nexport interface ITableBodyProps<K, V> {\r\n  items: IKeyValueMap<K, V>;\r\n  tdAttributes: ITDAttributes;\r\n  dataDisplayFunction: (key: string, data: any) => any\r\n}\r\n\r\nclass TableBody<K, V> extends Component<ITableBodyProps<K, V>, {}> {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <tbody>\r\n        {\r\n\r\n          this.props.items.getValues().toArray().map((v, index) => {\r\n\r\n            return (<tr key={index}>\r\n              {\r\n                Object.entries(v).map(([key, value], i) => {\r\n                  if (i > 0) {\r\n                    const tdValue = this.props.dataDisplayFunction(key, value);\r\n                    return <td key={i} className={this.props.tdAttributes.className.get(key)} >{tdValue}</td>\r\n                  }\r\n                })\r\n              }\r\n            </tr>)\r\n\r\n          })\r\n\r\n        }\r\n\r\n      </tbody>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;","import React, { Component } from 'react';\r\n\r\nexport interface ITableHeadNamesProps {\r\n  columnNames: string[];\r\n}\r\n\r\nclass TableHead extends Component<ITableHeadNamesProps, {}> {\r\n\r\n\r\n  // handleTableHeaderColumnResponsiveness = (index: number, title: string): string => {\r\n  //   if (window.matchMedia(\"(max-width: 700px)\").matches) {\r\n  //     document.querySelectorAll(`table td:nth-of-type(${index}):before{content: ${title} }`)\r\n  //   }\r\n\r\n  // }\r\n\r\n  componentDidMount() {\r\n    const parent = document.getElementsByTagName(\"thead\");\r\n    // console.log(parent.length)\r\n\r\n    const  result = document.querySelectorAll(\"table th:nth-of-type(1)\");\r\n\r\n    // console.log(result[0]);\r\n\r\n    // if (window.matchMedia(\"(max-width: 700px)\").matches) {\r\n    //   const newTH = document.querySelector(\"td:nth-of-type(1):before\")! as HTMLElement;\r\n    //   console.log(newTH);\r\n\r\n    //   if (newTH !== null) {\r\n    //     newTH!.textContent = \"test\";\r\n\r\n    //     const result = document.querySelector(\"td:nth-of-type(1):before\");\r\n        \r\n    //     console.log(result);\r\n\r\n\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columnNames.map((title, index) => {\r\n            return <th key={index}> {title}</th>\r\n          })}\r\n        </tr>\r\n      </thead>\r\n\r\n    );\r\n  }\r\n}\r\nexport default TableHead;","import { Console } from 'console';\r\nimport { Component } from 'react';\r\n\r\nimport './table.css'\r\nimport CSS from 'csstype'\r\nimport TableBody, { ITableBodyProps } from './TableBody';\r\nimport { ITDAttributes } from './TableData';\r\nimport TableHead, { ITableHeadNamesProps } from './TableHeader';\r\n\r\nexport interface ITableProps<K, V> {\r\n    columnNames: ITableHeadNamesProps;\r\n    tableRowsData: ITableBodyProps<K, V>;\r\n    tableId: string;\r\n    tdAttributes: ITDAttributes;\r\n    dataDisplayFunction: (key: string, data: any) => any\r\n}\r\n\r\nclass Table<K, V> extends Component<ITableProps<K, V>, {}> {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <table id={this.props.tableId}>\r\n                    <TableHead columnNames={this.props.columnNames.columnNames} />\r\n                    <TableBody items={this.props.tableRowsData.items} tdAttributes={this.props.tdAttributes} dataDisplayFunction={this.props.dataDisplayFunction} />\r\n                </table>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","export class WorkflowConstants {\r\n\r\n  static STATUS_OPEN: string = \"Open\";\r\n  static STATUS_ERROR: string = \"Error\";\r\n  static STATUS_CLOSED: string = \"Closed\";\r\n  static STATUS_ALL_OR = WorkflowConstants.STATUS_OPEN || WorkflowConstants.STATUS_CLOSED || WorkflowConstants.STATUS_ERROR;\r\n\r\n  static SUB_STATUS_AWAITING_COMPARISON_APPROVAL: string = 'AwaitingComparisonApproval'\r\n  static SUB_STATUS_ERROR: string = 'Error';\r\n  static SUB_STATUS_CLOSED: string = 'Closed';\r\n  static statusColours(statusOrSubStatus: string): string {\r\n  \r\n    if (statusOrSubStatus === WorkflowConstants.STATUS_OPEN)\r\n      return \"warning\";\r\n  \r\n    if (statusOrSubStatus === WorkflowConstants.SUB_STATUS_AWAITING_COMPARISON_APPROVAL)\r\n      return \"warning\";\r\n  \r\n    if (statusOrSubStatus === WorkflowConstants.STATUS_ERROR)\r\n      return \"danger\"\r\n  \r\n      if (statusOrSubStatus === WorkflowConstants.SUB_STATUS_ERROR)\r\n      return \"danger\"\r\n  \r\n    if (statusOrSubStatus === WorkflowConstants.STATUS_CLOSED)\r\n      return \"success\"\r\n  \r\n    if (statusOrSubStatus === WorkflowConstants.SUB_STATUS_CLOSED)\r\n      return \"success\"\r\n    \r\n    return \"\";\r\n  }\r\n\r\n}\r\n","import { Component } from 'react'\r\nimport { ITestModel, IKey } from '../../models/Test'\r\nimport KeyValueMap from '../../Utils/collections/Map'\r\nimport Table from './Table'\r\nimport { ITableProps } from './Table'\r\nimport { ITableBodyProps } from './TableBody'\r\nimport { ITDAttributes } from './TableData'\r\nimport { ITableHeadNamesProps } from './TableHeader'\r\nimport './table-test.css'\r\nimport { WorkflowConstants } from '../../constants/Workflow'\r\n\r\nconst titles: string[] = [\r\n  \"REF.NO\",\r\n  \"APPLICATION DATE\",\r\n  \"TYPE\",\r\n  \"STATUS\",\r\n  \"SUBSTATUS\",\r\n  \"APPLICANT\",\r\n  \"BENEFICIARY\",\r\n  \"AMOUNT\"\r\n]\r\n\r\nconst testData: ITestModel = {\r\n  id: 1,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Open\",\r\n  substatus: \"AwaitingComparisonApproval\",\r\n  sender: 'DANIEL COMBONI',\r\n  recipient: 'TIMOTHY E. KASASA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData: IKey = {\r\n  id: testData.id\r\n}\r\n\r\n\r\nconst testData2: ITestModel = {\r\n  id: 2,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Error\",\r\n  substatus: \"Error\",\r\n  sender: 'NAMUGGA LISA',\r\n  recipient: 'FRIEDA HAMSTER',\r\n  amount: 600\r\n}\r\n\r\nconst keyData2: IKey = {\r\n  id: testData2.id\r\n}\r\n\r\nconst testData3: ITestModel = {\r\n  id: 3,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\nconst keyData3: IKey = {\r\n  id: testData3.id\r\n}\r\n\r\nconst testData4: ITestModel = {\r\n  id: 4,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData4: IKey = {\r\n  id: testData4.id\r\n}\r\n\r\n\r\nconst testData5: ITestModel = {\r\n  id: 5,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData5: IKey = {\r\n  id: testData5.id\r\n}\r\n\r\nconst testData6: ITestModel = {\r\n  id: 6,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData6: IKey = {\r\n  id: testData6.id\r\n}\r\n\r\nconst testData7: ITestModel = {\r\n  id: 7,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData7: IKey = {\r\n  id: testData7.id\r\n}\r\n\r\nconst testData8: ITestModel = {\r\n  id: 8,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData8: IKey = {\r\n  id: testData8.id\r\n}\r\n\r\nconst testData9: ITestModel = {\r\n  id: 9,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData9: IKey = {\r\n  id: testData9.id\r\n}\r\n\r\nconst testData10: ITestModel = {\r\n  id: 10,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData10: IKey = {\r\n  id: testData10.id\r\n}\r\n\r\nconst testData11: ITestModel = {\r\n  id: 11,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData11: IKey = {\r\n  id: testData11.id\r\n}\r\n\r\nconst testData12: ITestModel = {\r\n  id: 12,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData12: IKey = {\r\n  id: testData12.id\r\n}\r\n\r\nconst testData13: ITestModel = {\r\n  id: 13,\r\n  referenceNumber: '45678f',\r\n  applicationDate: new Date(),\r\n  type: \"RTGS\",\r\n  status: \"Closed\",\r\n  substatus: \"Closed\",\r\n  sender: 'CHARLIE LWANGA',\r\n  recipient: 'BENJI LUTAAYA',\r\n  amount: 600\r\n}\r\n\r\nconst keyData13: IKey = {\r\n  id: testData13.id\r\n}\r\n\r\nlet tdClassNames = new KeyValueMap<string, string>();\r\ntdClassNames.put(\"id\", \"\")\r\ntdClassNames.put(\"referenceNumber\", \"reference-number\")\r\ntdClassNames.put(\"applicationDate\", \"application-date\")\r\ntdClassNames.put(\"type\", \"transfer-type\")\r\ntdClassNames.put(\"status\", \"transfer-status\")\r\ntdClassNames.put(\"subStatus\", \"transfer-sub-status\")\r\ntdClassNames.put(\"sender\", \"transfer-sender\")\r\ntdClassNames.put(\"recipient\", \"transfer-recipient\")\r\ntdClassNames.put(\"amount\", \"transfer-amount\")\r\n\r\nconst tdAttributes: ITDAttributes = {\r\n  className: tdClassNames\r\n}\r\n\r\nlet tableRowData = new KeyValueMap<IKey, ITestModel>();\r\ntableRowData.put(keyData, testData);\r\ntableRowData.put(keyData2, testData2);\r\ntableRowData.put(keyData3, testData3);\r\ntableRowData.put(keyData4, testData4);\r\ntableRowData.put(keyData5, testData5);\r\ntableRowData.put(keyData6, testData6);\r\ntableRowData.put(keyData7, testData7);\r\ntableRowData.put(keyData8, testData8);\r\ntableRowData.put(keyData9, testData9);\r\ntableRowData.put(keyData10, testData10);\r\ntableRowData.put(keyData11, testData11);\r\ntableRowData.put(keyData12, testData12);\r\ntableRowData.put(keyData13, testData13);\r\n\r\nconst dataDisplayFunction = (key: string, data: any) => {\r\n\r\n  if (key === 'applicationDate') {\r\n    const date = new Date(data);\r\n    return date.getDate() + '/' + Number(date.getMonth() + 1) + '/' + date.getFullYear() + '';\r\n  }\r\n\r\n  if (key === 'status') {\r\n    const statusClassName = WorkflowConstants.statusColours(data);\r\n    const span = <span className={statusClassName}>{data}</span>\r\n    return span;\r\n  }\r\n\r\n  if (key === 'substatus') {\r\n    const statusClassName = WorkflowConstants.statusColours(data);\r\n    const span = <span className={statusClassName}>{data}</span>\r\n    return span;\r\n  }\r\n\r\n  return \"\".concat(data);\r\n}\r\n\r\nconst tableItems: ITableBodyProps<IKey, ITestModel> = { items: tableRowData, tdAttributes, dataDisplayFunction: dataDisplayFunction }\r\n\r\nconst colNames: ITableHeadNamesProps = { columnNames: titles }\r\n\r\nconst props: ITableProps<IKey, ITestModel> = { columnNames: colNames, tableId: \"test-table-id\", tableRowsData: tableItems, tdAttributes, dataDisplayFunction }\r\n\r\nclass TableTest extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Table columnNames={props.columnNames} tableId={props.tableId} tableRowsData={props.tableRowsData} tdAttributes={props.tdAttributes} dataDisplayFunction={props.dataDisplayFunction} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableTest;","import React, { Component } from 'react';\r\nimport Accordion from '../accordion/Accordion';\r\nimport ErrorBoundary from '../gotchas/ErrorBoundary';\r\nimport Header from '../header/Header';\r\nimport Main from '../main/Main';\r\nimport MainBody from '../main/MainBody';\r\nimport Sidebar from '../sidebar/Sidebar';\r\nimport TableTest from '../table/TableTest';\r\n\r\nconst Test = () => {\r\n\tthrow new Error('I crashed!');\r\n}\r\n\r\nclass HomePage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Main>\r\n\r\n        <Header />\r\n\r\n        <Sidebar />\r\n\r\n        <MainBody>\r\n\r\n          <h3>New Applications</h3>\r\n\r\n          <ErrorBoundary >\r\n\r\n            <TableTest />\r\n\r\n          </ErrorBoundary>\r\n\r\n          <TableTest />\r\n        </MainBody>\r\n\r\n      </Main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage","export default class Dom {\r\n  public static getElById(id: string): HTMLElement {\r\n    return document.getElementById(id)!;\r\n  }\r\n}\r\n","import * as ZXing from \"@zxing/library\";\r\nimport { BrowserMultiFormatReader } from \"@zxing/library\";\r\nimport Dom from \"../../Utils/Dom\";\r\n\r\nexport default class HandleScanQRCode {\r\n  public static selectedDeviceId: any;\r\n  public static codeReader: BrowserMultiFormatReader;\r\n\r\n  public static resetCamera(): void {\r\n    HandleScanQRCode.codeReader.reset();\r\n    Dom.getElById(\"result\")!.textContent = \"\";\r\n    Dom.getElById(\"result-card-id\")!.hidden = true;\r\n    console.log(\"Reset.\");\r\n  }\r\n\r\n  public static startScan(): void {\r\n    Dom.getElById(\"video-card-id\").hidden = false;\r\n    Dom.getElById(\"result-card-id\").hidden = true;\r\n    HandleScanQRCode.codeReader.decodeFromVideoDevice(HandleScanQRCode.selectedDeviceId, \"video\", (result, err) => {\r\n      if (result) {\r\n        console.log(result);\r\n        Dom.getElById(\"video-card-id\")!.hidden = true;\r\n        Dom.getElById(\"result-card-id\")!.hidden = false;\r\n        Dom.getElById(\"result\")!.textContent = result.getText();\r\n        console.log(\"the result:\", result.getText());\r\n        HandleScanQRCode.codeReader.reset();\r\n      }\r\n      if (err && !(err instanceof ZXing.NotFoundException)) {\r\n        // console.error(err);\r\n        // document.getElementById(\"result\").textContent = err;\r\n      }\r\n    });\r\n    console.log(`Started continous decode from camera with id ${HandleScanQRCode.selectedDeviceId}`);\r\n  }\r\n\r\n  public static displayCamerasNames(): void {\r\n    HandleScanQRCode.getAllCameras().then((cams) => {\r\n      const sourceSelect = Dom.getElById(\"sourceSelect\") as HTMLSelectElement;\r\n\r\n      if (sourceSelect!.childNodes.length > 0) {\r\n        sourceSelect?.childNodes.forEach((child) => child.remove());\r\n      }\r\n\r\n      HandleScanQRCode.selectedDeviceId = cams[0].deviceId;\r\n      let camValues = new Map();\r\n      // place camera in Map to avoid repetition\r\n      if (cams.length >= 1) {\r\n        cams.forEach((element) => {\r\n          camValues.set(element.deviceId, element.label);\r\n        });\r\n      }\r\n      // populate camera dropdown list\r\n      camValues.forEach((value, key) => {\r\n        const sourceOption = document.createElement(\"option\");\r\n        sourceOption.text = value;\r\n        sourceOption.value = key;\r\n        sourceSelect?.appendChild(sourceOption);\r\n      });\r\n      // choose camera\r\n      sourceSelect!.onchange = () => {\r\n        HandleScanQRCode.selectedDeviceId = sourceSelect?.value;\r\n      };\r\n    });\r\n  }\r\n\r\n  public static getAllCameras(): Promise<MediaDeviceInfo[]> {\r\n    HandleScanQRCode.codeReader = new BrowserMultiFormatReader();\r\n    const codeReader = HandleScanQRCode.codeReader;\r\n    return codeReader.listVideoInputDevices();\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HandleScanQRCode from \"./HandleScanQRCode\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Main from \"../main/Main\";\r\nimport Header from \"../header/Header\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport MainBody from \"../main/MainBody\";\r\n\r\n// dropdown list of cameras available\r\nconst CameraSelectionPanel = () => {\r\n  return (\r\n    <div className=\"input-group mb-3\" id=\"sourceSelectPanel\">\r\n      <div className=\"input-group-prepend\">\r\n        <label className=\"input-group-text\">Camera options</label>\r\n      </div>\r\n      <select className=\"custom-select\" id=\"sourceSelect\"></select>\r\n    </div>\r\n  );\r\n};\r\n\r\n// video scan area\r\nconst VideoCardPanel = () => {\r\n  return (\r\n    <div className=\"card\" hidden={true} id=\"video-card-id\">\r\n      <h5 className=\"card-header\">Focus camera on barcode(qr code)</h5>\r\n      <div className=\"card-body\">\r\n        <div>\r\n          <video\r\n            id=\"video\"\r\n            width=\"100%\"\r\n            style={{ border: \"0px solid gray\" }}\r\n          ></video>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// video scan result\r\nconst VideoScanResult = () => {\r\n  return (\r\n    <div className=\"card\" hidden={true} id=\"result-card-id\">\r\n      <h5 className=\"card-header\">decoded result</h5>\r\n      <div className=\"card-body\">\r\n        {/* <h5 className=\"card-title\">Count</h5> */}\r\n        <p className=\"card-text\" id=\"result\"></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass ScanQRCode extends Component {\r\n\r\n\r\n  startScan = () => HandleScanQRCode.startScan();\r\n\r\n  resetCamera = () => HandleScanQRCode.resetCamera();\r\n\r\n  getAllCameras = () => HandleScanQRCode.displayCamerasNames();\r\n\r\n  render() {\r\n    // performScan();\r\n    this.getAllCameras();\r\n    return (\r\n\r\n      <Main>\r\n\r\n        <Header />\r\n\r\n        <Sidebar />\r\n\r\n        <MainBody>\r\n          <div className=\"container\">\r\n            <button type=\"button\" className=\"btn btn-primary m-1\" id=\"startButton\" onClick={this.startScan}>\r\n              Scan\r\n      </button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary m-1\"\r\n              id=\"resetButton\"\r\n              onClick={this.resetCamera}\r\n            >\r\n              Reset\r\n        </button>\r\n\r\n            {/* <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              onClick={this.getAllCameras}\r\n            >\r\n              all cameras\r\n        </button> */}\r\n\r\n            <CameraSelectionPanel />\r\n            <VideoCardPanel />\r\n            <VideoScanResult />\r\n          </div>\r\n        </MainBody>\r\n\r\n      </Main>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (state: any) => {\r\n//   return {\r\n//     quantity: state\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch: any) => {\r\n//   return {\r\n//     justPrint: () => dispatch({ type: Constants.PRINT })\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ScanQRCode);\r\nexport default ScanQRCode\r\n","// import React from \"react\";\r\n// import { Router, Route, Switch, Link, NavLink } from \"react-router-dom\";\r\n// // import { Link, Route, Switch } from \"react-router-dom\";\r\n// import { createBrowserHistory } from \"history\";\r\n// import HomePage from \"../components/home/HomePage\";\r\n\r\n// export const history = createBrowserHistory();\r\n\r\n// // Instead of BrowserRouter, we use the regular router,\r\n// // but we pass in a customer history to it.\r\n// const AppRouter = () => (\r\n//   // <Router history={history}>\r\n//   //   <div>\r\n//   //     <Switch>\r\n//   //       <Route path=\"/\" component={HomePage} />\r\n//   //     </Switch>\r\n//   //   </div>\r\n//   // </Router>\r\n//   <Router history={history}>\r\n//     <div>\r\n//       <Switch>\r\n//         <Route path=\"/\" component={HomePage} />\r\n//       </Switch>\r\n//     </div>\r\n//   </Router>\r\n// );\r\n\r\n// export default AppRouter;\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";// import { Link, Route, Switch } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport HomePage from \"../components/home/HomePage\";\r\nimport TestPage from \"../components/home/TestPage\";\r\nimport ScanQRCode from \"../components/scan/ScanQRCode\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n// Instead of BrowserRouter, we use the regular router,\r\n// but we pass in a customer history to it.\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Applications</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/scan\">Scan QR code</Link>\r\n            </li>\r\n          </ul>\r\n        </nav> */}\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n\r\n          <Route path=\"/scan\">\r\n            <ScanQRCode />\r\n          </Route>\r\n         \r\n          <Route path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default AppRouter;\r\n","\n\nimport HomePage from './components/home/HomePage'\nimport Main from './components/main/Main'\n// import \"./App.css\";\nimport  './components/styles/scrollbar.css'\nimport AppRouter from './router'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\n// import { createStore } from \"redux\";\n// import reducer from \"./reducers/reducer\";\n// import {store} from './store/store'\n\n// window.store = store;\n\nReactDOM.render(\n  \n  // <Provider store={store}>\n    <App />,\n  // </Provider>,\n  \n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}